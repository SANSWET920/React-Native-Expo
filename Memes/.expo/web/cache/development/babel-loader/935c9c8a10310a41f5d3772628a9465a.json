{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\Actions.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Color from \"./Color\";\n\nvar Actions = function (_React$Component) {\n  _inherits(Actions, _React$Component);\n\n  var _super = _createSuper(Actions);\n\n  function Actions(props) {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    _this = _super.call(this, props);\n    _this.onActionsPress = _this.onActionsPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Actions, [{\n    key: \"onActionsPress\",\n    value: function onActionsPress() {\n      var _this2 = this;\n\n      var options = this.props.options;\n      var optionKeys = Object.keys(options);\n      var cancelButtonIndex = optionKeys.indexOf('Cancel');\n      this.context.actionSheet().showActionSheetWithOptions({\n        options: optionKeys,\n        cancelButtonIndex: cancelButtonIndex,\n        tintColor: this.props.optionTintColor\n      }, function (buttonIndex) {\n        var key = optionKeys[buttonIndex];\n\n        if (key) {\n          options[key](_this2.props);\n        }\n      });\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.props.icon) {\n        return this.props.icon();\n      }\n\n      return React.createElement(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.iconText, this.props.iconTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, \"+\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: this.props.onPressActionButton || this.onActionsPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, this.renderIcon());\n    }\n  }]);\n\n  return Actions;\n}(React.Component);\n\nexport { Actions as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});\nActions.contextTypes = {\n  actionSheet: PropTypes.func\n};\nActions.defaultProps = {\n  onSend: function onSend() {},\n  options: {},\n  optionTintColor: Color.optionTintColor,\n  icon: null,\n  containerStyle: {},\n  iconTextStyle: {},\n  wrapperStyle: {}\n};\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: ViewPropTypes.style,\n  containerStyle: ViewPropTypes.style,\n  iconTextStyle: Text.propTypes.style\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/Actions.js"],"names":["PropTypes","React","Color","Actions","props","onActionsPress","bind","options","optionKeys","Object","keys","cancelButtonIndex","indexOf","context","actionSheet","showActionSheetWithOptions","tintColor","optionTintColor","buttonIndex","key","icon","styles","wrapper","wrapperStyle","iconText","iconTextStyle","container","containerStyle","onPressActionButton","renderIcon","Component","StyleSheet","create","width","height","marginLeft","marginBottom","borderRadius","borderColor","defaultColor","borderWidth","flex","color","fontWeight","fontSize","backgroundColor","backgroundTransparent","textAlign","contextTypes","func","defaultProps","onSend","propTypes","object","string","ViewPropTypes","style","Text"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,KAAP;;IAEqBC,O;;;;;AAEnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAFiB;AAGlB;;;;qCAEgB;AAAA;;AAAA,UACPC,OADO,GACK,KAAKH,KADV,CACPG,OADO;AAEf,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAnB;AACA,UAAMI,iBAAiB,GAAGH,UAAU,CAACI,OAAX,CAAmB,QAAnB,CAA1B;AACA,WAAKC,OAAL,CAAaC,WAAb,GAA2BC,0BAA3B,CACE;AACER,QAAAA,OAAO,EAAEC,UADX;AAEEG,QAAAA,iBAAiB,EAAjBA,iBAFF;AAGEK,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWa;AAHxB,OADF,EAME,UAACC,WAAD,EAAiB;AACf,YAAMC,GAAG,GAAGX,UAAU,CAACU,WAAD,CAAtB;;AACA,YAAIC,GAAJ,EAAS;AACPZ,UAAAA,OAAO,CAACY,GAAD,CAAP,CAAa,MAAI,CAACf,KAAlB;AACD;AACF,OAXH;AAaD;;;iCAEY;AACX,UAAI,KAAKA,KAAL,CAAWgB,IAAf,EAAqB;AACnB,eAAO,KAAKhB,KAAL,CAAWgB,IAAX,EAAP;AACD;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,EAAiB,KAAKlB,KAAL,CAAWmB,YAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACF,MAAM,CAACG,QAAR,EAAkB,KAAKpB,KAAL,CAAWqB,aAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAKD;;;6BAEQ;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,SAAR,EAAmB,KAAKtB,KAAL,CAAWuB,cAA9B,CADT;AAEE,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwB,mBAAX,IAAkC,KAAKvB,cAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKwB,UAAL,EAJH,CADF;AAQD;;;;EA9CkC5B,KAAK,CAAC6B,S;;SAAtB3B,O;AAkDrB,IAAMkB,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,UAAU,EAAE,EAHH;AAITC,IAAAA,YAAY,EAAE;AAJL,GADoB;AAO/Bd,EAAAA,OAAO,EAAE;AACPe,IAAAA,YAAY,EAAE,EADP;AAEPC,IAAAA,WAAW,EAAEpC,KAAK,CAACqC,YAFZ;AAGPC,IAAAA,WAAW,EAAE,CAHN;AAIPC,IAAAA,IAAI,EAAE;AAJC,GAPsB;AAa/BjB,EAAAA,QAAQ,EAAE;AACRkB,IAAAA,KAAK,EAAExC,KAAK,CAACqC,YADL;AAERI,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAIRC,IAAAA,eAAe,EAAE3C,KAAK,CAAC4C,qBAJf;AAKRC,IAAAA,SAAS,EAAE;AALH;AAbqB,CAAlB,CAAf;AAsBA5C,OAAO,CAAC6C,YAAR,GAAuB;AACrBlC,EAAAA,WAAW,EAAEd,SAAS,CAACiD;AADF,CAAvB;AAIA9C,OAAO,CAAC+C,YAAR,GAAuB;AACrBC,EAAAA,MAAM,EAAE,kBAAM,CAAG,CADI;AAErB5C,EAAAA,OAAO,EAAE,EAFY;AAGrBU,EAAAA,eAAe,EAAEf,KAAK,CAACe,eAHF;AAIrBG,EAAAA,IAAI,EAAE,IAJe;AAKrBO,EAAAA,cAAc,EAAE,EALK;AAMrBF,EAAAA,aAAa,EAAE,EANM;AAOrBF,EAAAA,YAAY,EAAE;AAPO,CAAvB;AAUApB,OAAO,CAACiD,SAAR,GAAoB;AAClBD,EAAAA,MAAM,EAAEnD,SAAS,CAACiD,IADA;AAElB1C,EAAAA,OAAO,EAAEP,SAAS,CAACqD,MAFD;AAGlBpC,EAAAA,eAAe,EAAEjB,SAAS,CAACsD,MAHT;AAIlBlC,EAAAA,IAAI,EAAEpB,SAAS,CAACiD,IAJE;AAKlBrB,EAAAA,mBAAmB,EAAE5B,SAAS,CAACiD,IALb;AAMlB1B,EAAAA,YAAY,EAAEgC,aAAa,CAACC,KANV;AAOlB7B,EAAAA,cAAc,EAAE4B,aAAa,CAACC,KAPZ;AAQlB/B,EAAAA,aAAa,EAAEgC,IAAI,CAACL,SAAL,CAAeI;AARZ,CAApB","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }] */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, ViewPropTypes } from 'react-native';\nimport Color from './Color';\n\nexport default class Actions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.onActionsPress = this.onActionsPress.bind(this);\n  }\n\n  onActionsPress() {\n    const { options } = this.props;\n    const optionKeys = Object.keys(options);\n    const cancelButtonIndex = optionKeys.indexOf('Cancel');\n    this.context.actionSheet().showActionSheetWithOptions(\n      {\n        options: optionKeys,\n        cancelButtonIndex,\n        tintColor: this.props.optionTintColor,\n      },\n      (buttonIndex) => {\n        const key = optionKeys[buttonIndex];\n        if (key) {\n          options[key](this.props);\n        }\n      },\n    );\n  }\n\n  renderIcon() {\n    if (this.props.icon) {\n      return this.props.icon();\n    }\n    return (\n      <View style={[styles.wrapper, this.props.wrapperStyle]}>\n        <Text style={[styles.iconText, this.props.iconTextStyle]}>+</Text>\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <TouchableOpacity\n        style={[styles.container, this.props.containerStyle]}\n        onPress={this.props.onPressActionButton || this.onActionsPress}\n      >\n        {this.renderIcon()}\n      </TouchableOpacity>\n    );\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10,\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1,\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center',\n  },\n});\n\nActions.contextTypes = {\n  actionSheet: PropTypes.func,\n};\n\nActions.defaultProps = {\n  onSend: () => { },\n  options: {},\n  optionTintColor: Color.optionTintColor,\n  icon: null,\n  containerStyle: {},\n  iconTextStyle: {},\n  wrapperStyle: {},\n};\n\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: ViewPropTypes.style,\n  containerStyle: ViewPropTypes.style,\n  iconTextStyle: Text.propTypes.style,\n};\n"]},"metadata":{},"sourceType":"module"}