{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\@expo\\\\react-native-action-sheet\\\\ActionSheetProvider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ActionSheet from \"./ActionSheet\";\n\nvar ActionSheetProvider = function (_React$Component) {\n  _inherits(ActionSheetProvider, _React$Component);\n\n  var _super = _createSuper(ActionSheetProvider);\n\n  function ActionSheetProvider() {\n    _classCallCheck(this, ActionSheetProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ActionSheetProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var _this = this;\n\n      return {\n        showActionSheetWithOptions: function showActionSheetWithOptions() {\n          var _this$_actionSheetRef;\n\n          return (_this$_actionSheetRef = _this._actionSheetRef).showActionSheetWithOptions.apply(_this$_actionSheetRef, arguments);\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ActionSheet, {\n        ref: function ref(component) {\n          return _this2._actionSheetRef = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.Children.only(this.props.children));\n    }\n  }]);\n\n  return ActionSheetProvider;\n}(React.Component);\n\nActionSheetProvider.propTypes = {\n  children: PropTypes.any\n};\nActionSheetProvider.childContextTypes = {\n  showActionSheetWithOptions: PropTypes.func\n};\nexport { ActionSheetProvider as default };","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/@expo/react-native-action-sheet/ActionSheetProvider.js"],"names":["React","PropTypes","ActionSheet","ActionSheetProvider","showActionSheetWithOptions","_actionSheetRef","component","Children","only","props","children","Component","propTypes","any","childContextTypes","func"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP;;IAEqBC,mB;;;;;;;;;;;;;sCASD;AAAA;;AAChB,aAAO;AACLC,QAAAA,0BAA0B,EAAE;AAAA;;AAAA,iBAC1B,yBAAA,KAAI,CAACC,eAAL,EAAqBD,0BAArB,wCAD0B;AAAA;AADvB,OAAP;AAID;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,aAAAE,SAAS;AAAA,iBAAK,MAAI,CAACD,eAAL,GAAuBC,SAA5B;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CADH,CADF;AAKD;;;;EAtB8CV,KAAK,CAACW,S;;AAAlCR,mB,CACZS,S,GAAY;AACjBF,EAAAA,QAAQ,EAAET,SAAS,CAACY;AADH,C;AADAV,mB,CAKZW,iB,GAAoB;AACzBV,EAAAA,0BAA0B,EAAEH,SAAS,CAACc;AADb,C;SALRZ,mB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActionSheet from './ActionSheet';\n\nexport default class ActionSheetProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.any,\n  };\n\n  static childContextTypes = {\n    showActionSheetWithOptions: PropTypes.func,\n  };\n\n  getChildContext() {\n    return {\n      showActionSheetWithOptions: (...args) =>\n        this._actionSheetRef.showActionSheetWithOptions(...args),\n    };\n  }\n\n  render() {\n    return (\n      <ActionSheet ref={component => (this._actionSheetRef = component)}>\n        {React.Children.only(this.props.children)}\n      </ActionSheet>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}