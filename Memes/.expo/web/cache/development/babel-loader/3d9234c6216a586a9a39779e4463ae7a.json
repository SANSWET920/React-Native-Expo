{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport BottomTab from \"./Nav\";\nimport Loading from \"./Nav\";\nimport { Provider } from 'react-redux';\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { ReactReduxContext } from 'react-redux';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    menu: \"closeMenu\",\n    log: \"\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"OPENMENU\":\n      return _objectSpread({}, state, {\n        menu: \"openMenu\"\n      });\n\n    case \"CLOSEMENU\":\n      return _objectSpread({}, state, {\n        menu: \"closeMenu\"\n      });\n\n    case \"LOG\":\n      return _objectSpread({}, state, {\n        log: action.email\n      });\n\n    case \"OPENLOGIN\":\n      return _objectSpread({}, state, {\n        menu: \"openLogin\"\n      });\n\n    case \"CLOSELOGIN\":\n      return _objectSpread({}, state, {\n        menu: \"closeLogin\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar database = createStore(reducer);\n\nvar App = function App() {\n  return React.createElement(Provider, {\n    store: database,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(BottomTab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/React Native Project/Memes/App.js"],"names":["React","createStore","BottomTab","Loading","Provider","createAppContainer","createStackNavigator","LoginScreen","ChatScreen","connect","bindActionCreators","ReactReduxContext","reducer","state","menu","log","action","type","email","database","App"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,SAAP;AAEA,OAAOC,OAAP;AAEA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAOC,WAAP;AAEA,OAAOC,UAAP;AAEA,SAASC,OAAT,QAAuB,aAAvB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,iBAAT,QAAkC,aAAlC;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAoD;AAAA,MAAnDC,KAAmD,uEAA3C;AAAEC,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAA2C;AAAA,MAAXC,MAAW;;AAElE,UAASA,MAAM,CAACC,IAAhB;AAEE,SAAK,UAAL;AAEE,+BAAYJ,KAAZ;AAAmBC,QAAAA,IAAI,EAAE;AAAzB;;AAEH,SAAK,WAAL;AAEG,+BAAYD,KAAZ;AAAkBC,QAAAA,IAAI,EAAE;AAAxB;;AAGH,SAAK,KAAL;AAEE,+BAAYD,KAAZ;AAAmBE,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA/B;;AAEF,SAAK,WAAL;AAEG,+BAAYL,KAAZ;AAAkBC,QAAAA,IAAI,EAAE;AAAxB;;AAEF,SAAK,YAAL;AAEE,+BAAYD,KAAZ;AAAkBC,QAAAA,IAAI,EAAE;AAAxB;;AAEF;AAEC,aAAOD,KAAP;AAzBH;AA6BD,CA/BD;;AAkCA,IAAMM,QAAQ,GAAGlB,WAAW,CAACW,OAAD,CAA5B;;AAEA,IAAMQ,GAAG,GAAG,SAANA,GAAM;AAAA,SAEV,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFU;AAAA,CAAZ;;AAeA,eAAeC,GAAf","sourcesContent":["import React from \"react\";\n\nimport { createStore } from \"redux\";\n\nimport BottomTab from \"./Nav\";\n\nimport Loading from \"./Nav\"\n\nimport {Provider} from 'react-redux';\n\nimport { createAppContainer } from \"react-navigation\";\n\nimport { createStackNavigator } from \"react-navigation-stack\";\n\nimport LoginScreen from \"./screens/LoginScreen\";\n\nimport ChatScreen from \"./screens/ChatScreen\";\n\nimport { connect} from \"react-redux\";\n\nimport { bindActionCreators } from 'redux'\n\nimport { ReactReduxContext } from 'react-redux'\n\n\n\n\n\n\n\nconst reducer = (state = { menu: \"closeMenu\", log: \"\" }, action) => {\n\n  switch ( action.type) {\n\n    case \"OPENMENU\":\n\n      return { ...state, menu: \"openMenu\" };\n\n   case \"CLOSEMENU\":\n\n      return { ...state,menu: \"closeMenu\" };\n\n  \n   case \"LOG\":\n     \n     return { ...state, log: action.email };\n\n   case \"OPENLOGIN\":\n\n      return { ...state,menu: \"openLogin\" };\n\n    case \"CLOSELOGIN\":\n\n      return { ...state,menu: \"closeLogin\"};\n\n    default:\n           \n     return state;\n\n  }\n\n};\n\n\nconst database = createStore(reducer);\n\nconst App = () => (\n\n  <Provider store={database}>\n\n\n  \n\n    <BottomTab />\n\n  </Provider>\n\n)\n\n\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}