{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\MessageText.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport ParsedText from 'react-native-parsed-text';\nimport Communications from 'react-native-communications';\nvar WWW_URL_PATTERN = /^www\\./i;\n\nvar MessageText = function (_React$Component) {\n  _inherits(MessageText, _React$Component);\n\n  var _super = _createSuper(MessageText);\n\n  function MessageText(props) {\n    var _this;\n\n    _classCallCheck(this, MessageText);\n\n    _this = _super.call(this, props);\n    _this.onUrlPress = _this.onUrlPress.bind(_assertThisInitialized(_this));\n    _this.onPhonePress = _this.onPhonePress.bind(_assertThisInitialized(_this));\n    _this.onEmailPress = _this.onEmailPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MessageText, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.currentMessage.text !== nextProps.currentMessage.text;\n    }\n  }, {\n    key: \"onUrlPress\",\n    value: function onUrlPress(url) {\n      if (WWW_URL_PATTERN.test(url)) {\n        this.onUrlPress(\"http://\" + url);\n      } else {\n        Linking.canOpenURL(url).then(function (supported) {\n          if (!supported) {\n            console.error('No handler for URL:', url);\n          } else {\n            Linking.openURL(url);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onPhonePress\",\n    value: function onPhonePress(phone) {\n      var options = ['Call', 'Text', 'Cancel'];\n      var cancelButtonIndex = options.length - 1;\n      this.context.actionSheet().showActionSheetWithOptions({\n        options: options,\n        cancelButtonIndex: cancelButtonIndex\n      }, function (buttonIndex) {\n        switch (buttonIndex) {\n          case 0:\n            Communications.phonecall(phone, true);\n            break;\n\n          case 1:\n            Communications.text(phone);\n            break;\n\n          default:\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"onEmailPress\",\n    value: function onEmailPress(email) {\n      Communications.email([email], null, null, null, null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var linkStyle = StyleSheet.flatten([styles[this.props.position].link, this.props.linkStyle[this.props.position]]);\n      return React.createElement(View, {\n        style: [styles[this.props.position].container, this.props.containerStyle[this.props.position]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, React.createElement(ParsedText, {\n        style: [styles[this.props.position].text, this.props.textStyle[this.props.position], this.props.customTextStyle],\n        parse: [].concat(_toConsumableArray(this.props.parsePatterns(linkStyle)), [{\n          type: 'url',\n          style: linkStyle,\n          onPress: this.onUrlPress\n        }, {\n          type: 'phone',\n          style: linkStyle,\n          onPress: this.onPhonePress\n        }, {\n          type: 'email',\n          style: linkStyle,\n          onPress: this.onEmailPress\n        }]),\n        childrenProps: _objectSpread({}, this.props.textProps),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, this.props.currentMessage.text));\n    }\n  }]);\n\n  return MessageText;\n}(React.Component);\n\nexport { MessageText as default };\nvar textStyle = {\n  fontSize: 16,\n  lineHeight: 20,\n  marginTop: 5,\n  marginBottom: 5,\n  marginLeft: 10,\n  marginRight: 10\n};\nvar styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'black'\n    }, textStyle),\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline'\n    }\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'white'\n    }, textStyle),\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline'\n    }\n  })\n};\nMessageText.contextTypes = {\n  actionSheet: PropTypes.func\n};\nMessageText.defaultProps = {\n  position: 'left',\n  currentMessage: {\n    text: ''\n  },\n  containerStyle: {},\n  textStyle: {},\n  linkStyle: {},\n  customTextStyle: {},\n  textProps: {},\n  parsePatterns: function parsePatterns() {\n    return [];\n  }\n};\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style\n  }),\n  textStyle: PropTypes.shape({\n    left: Text.propTypes.style,\n    right: Text.propTypes.style\n  }),\n  linkStyle: PropTypes.shape({\n    left: Text.propTypes.style,\n    right: Text.propTypes.style\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: Text.propTypes.style\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/MessageText.js"],"names":["PropTypes","React","ParsedText","Communications","WWW_URL_PATTERN","MessageText","props","onUrlPress","bind","onPhonePress","onEmailPress","nextProps","currentMessage","text","url","test","Linking","canOpenURL","then","supported","console","error","openURL","phone","options","cancelButtonIndex","length","context","actionSheet","showActionSheetWithOptions","buttonIndex","phonecall","email","linkStyle","StyleSheet","flatten","styles","position","link","container","containerStyle","textStyle","customTextStyle","parsePatterns","type","style","onPress","textProps","Component","fontSize","lineHeight","marginTop","marginBottom","marginLeft","marginRight","left","create","color","textDecorationLine","right","contextTypes","func","defaultProps","propTypes","oneOf","object","shape","ViewPropTypes","Text"],"mappings":"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","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }] */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Linking, StyleSheet, Text, View, ViewPropTypes } from 'react-native';\n\nimport ParsedText from 'react-native-parsed-text';\nimport Communications from 'react-native-communications';\n\nconst WWW_URL_PATTERN = /^www\\./i;\n\nexport default class MessageText extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.onUrlPress = this.onUrlPress.bind(this);\n    this.onPhonePress = this.onPhonePress.bind(this);\n    this.onEmailPress = this.onEmailPress.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.currentMessage.text !== nextProps.currentMessage.text;\n  }\n\n  onUrlPress(url) {\n    // When someone sends a message that includes a website address beginning with \"www.\" (omitting the scheme),\n    // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.\n    if (WWW_URL_PATTERN.test(url)) {\n      this.onUrlPress(`http://${url}`);\n    } else {\n      Linking.canOpenURL(url).then((supported) => {\n        if (!supported) {\n          // eslint-disable-next-line\n          console.error('No handler for URL:', url);\n        } else {\n          Linking.openURL(url);\n        }\n      });\n    }\n  }\n\n  onPhonePress(phone) {\n    const options = ['Call', 'Text', 'Cancel'];\n    const cancelButtonIndex = options.length - 1;\n    this.context.actionSheet().showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n      },\n      (buttonIndex) => {\n        switch (buttonIndex) {\n          case 0:\n            Communications.phonecall(phone, true);\n            break;\n          case 1:\n            Communications.text(phone);\n            break;\n          default:\n            break;\n        }\n      },\n    );\n  }\n\n  onEmailPress(email) {\n    Communications.email([email], null, null, null, null);\n  }\n\n  render() {\n    const linkStyle = StyleSheet.flatten([styles[this.props.position].link, this.props.linkStyle[this.props.position]]);\n    return (\n      <View style={[styles[this.props.position].container, this.props.containerStyle[this.props.position]]}>\n        <ParsedText\n          style={[\n            styles[this.props.position].text,\n            this.props.textStyle[this.props.position],\n            this.props.customTextStyle,\n          ]}\n          parse={[\n            ...this.props.parsePatterns(linkStyle),\n            { type: 'url', style: linkStyle, onPress: this.onUrlPress },\n            { type: 'phone', style: linkStyle, onPress: this.onPhonePress },\n            { type: 'email', style: linkStyle, onPress: this.onEmailPress },\n          ]}\n          childrenProps={{ ...this.props.textProps }}\n        >\n          {this.props.currentMessage.text}\n        </ParsedText>\n      </View>\n    );\n  }\n\n}\n\nconst textStyle = {\n  fontSize: 16,\n  lineHeight: 20,\n  marginTop: 5,\n  marginBottom: 5,\n  marginLeft: 10,\n  marginRight: 10,\n};\n\nconst styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: {\n      color: 'black',\n      ...textStyle,\n    },\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline',\n    },\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: {\n      color: 'white',\n      ...textStyle,\n    },\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline',\n    },\n  }),\n};\n\nMessageText.contextTypes = {\n  actionSheet: PropTypes.func,\n};\n\nMessageText.defaultProps = {\n  position: 'left',\n  currentMessage: {\n    text: '',\n  },\n  containerStyle: {},\n  textStyle: {},\n  linkStyle: {},\n  customTextStyle: {},\n  textProps: {},\n  parsePatterns: () => [],\n};\n\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style,\n  }),\n  textStyle: PropTypes.shape({\n    left: Text.propTypes.style,\n    right: Text.propTypes.style,\n  }),\n  linkStyle: PropTypes.shape({\n    left: Text.propTypes.style,\n    right: Text.propTypes.style,\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: Text.propTypes.style,\n};\n"]},"metadata":{},"sourceType":"module"}