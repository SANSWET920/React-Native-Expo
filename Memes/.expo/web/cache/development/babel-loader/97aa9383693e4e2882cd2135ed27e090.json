{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\components\\\\BigCard.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  \\n  width: \", \";\\n\\n  height: 220px;\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Carousel from \"react-native-snap-carousel\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar BigCard = function (_React$Component) {\n  _inherits(BigCard, _React$Component);\n\n  var _super = _createSuper(BigCard);\n\n  function BigCard() {\n    _classCallCheck(this, BigCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BigCard, [{\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(View, {\n        style: {\n          borderRadius: 10,\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 8\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: {\n          width: \"100%\",\n          height: 220\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 10\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }\n      }, React.createElement(Carousel, {\n        ref: function ref(c) {\n          return _this.carousel = c;\n        },\n        data: this.props.data,\n        renderItem: this._renderItem,\n        sliderWidth: screenWidth,\n        itemWidth: 340,\n        inactiveSlideScale: 0.95,\n        inactiveSlideOpacity: 1,\n        enableMomentum: true,\n        activeSlideAlignment: \"start\",\n        loop: true,\n        autoplay: true,\n        autoplayDelay: 3000,\n        autoplayInterval: 2000,\n        contentContainerCustomStyle: {\n          height: 220,\n          marginLeft: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return BigCard;\n}(React.Component);\n\nexport { BigCard as default };\nvar Container = styled.View(_templateObject(), screenWidth);","map":{"version":3,"sources":["D:/React Native Project/Memes/components/BigCard.js"],"names":["React","styled","Carousel","screenWidth","Dimensions","get","width","BigCard","item","index","borderRadius","overflow","uri","image","height","console","log","props","data","c","carousel","_renderItem","marginLeft","Component","Container","View"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;;;AAIA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;;IAGqBC,O;;;;;;;;;;;;;sCAGU;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;AAE3B,aAEG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE,EAAhB;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAEG,QAAA,MAAM,EAAE;AAERC,UAAAA,GAAG,EAAEJ,IAAI,CAACK;AAFF,SAFX;AAQA,QAAA,KAAK,EAAE;AAEJP,UAAAA,KAAK,EAAE,MAFH;AAIJQ,UAAAA,MAAM,EAAE;AAJJ,SARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFH;AA2BD;;;wCAGmB;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;AAED;;;6BAES;AAAA;;AAER,aAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAED,oBAAC,QAAD;AAED,QAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,iBAAI,KAAI,CAACC,QAAL,GAAgBD,CAApB;AAAA,SAFL;AAID,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAJhB;AAMD,QAAA,UAAU,EAAE,KAAKG,WANhB;AAQD,QAAA,WAAW,EAAElB,WARZ;AAUD,QAAA,SAAS,EAAE,GAVV;AAYD,QAAA,kBAAkB,EAAE,IAZnB;AAcD,QAAA,oBAAoB,EAAE,CAdrB;AAgBD,QAAA,cAAc,EAAE,IAhBf;AAkBD,QAAA,oBAAoB,EAAE,OAlBrB;AAoBD,QAAA,IAAI,EAAE,IApBL;AAsBD,QAAA,QAAQ,EAAE,IAtBT;AAwBD,QAAA,aAAa,EAAE,IAxBd;AA0BD,QAAA,gBAAgB,EAAE,IA1BjB;AA4BD,QAAA,2BAA2B,EAAE;AAEzBW,UAAAA,MAAM,EAAE,GAFiB;AAIzBQ,UAAAA,UAAU,EAAE;AAJa,SA5B5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,CAFD;AAgDC;;;;EA3FgCtB,KAAK,CAACuB,S;;SAAtBhB,O;AA8FrB,IAAMiB,SAAS,GAAGvB,MAAM,CAACwB,IAAV,oBAEJtB,WAFI,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { View,Image,Dimensions,Text } from \"react-native\";\r\n\r\nimport Carousel from \"react-native-snap-carousel\";\r\n\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n\r\n\r\nexport default class BigCard extends React.Component {\r\n\r\n\r\n  _renderItem({ item, index }) {\r\n\r\n    return (\r\n\r\n       <View style={{ borderRadius: 10, overflow: \"hidden\" }}>\r\n\r\n         <Image \r\n\r\n            source={{\r\n\r\n            uri: item.image\r\n\r\n         }}\r\n\r\n         style={{\r\n\r\n            width: \"100%\",\r\n\r\n            height: 220 \r\n\r\n         }}\r\n\r\n   \r\n      />\r\n\r\n       </View>\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    console.log(this.props.data);\r\n\r\n  }\r\n     \r\n   render() {\r\n\r\n    return(\r\n\r\n     <Container>\r\n\r\n    <Carousel \r\n\r\n   ref={c => this.carousel = c}\r\n\r\n   data={this.props.data}\r\n\r\n   renderItem={this._renderItem}\r\n\r\n   sliderWidth={screenWidth}\r\n\r\n   itemWidth={340}\r\n\r\n   inactiveSlideScale={0.95}\r\n\r\n   inactiveSlideOpacity={1}\r\n\r\n   enableMomentum={true}\r\n\r\n   activeSlideAlignment={\"start\"}\r\n\r\n   loop={true}\r\n\r\n   autoplay={true}\r\n\r\n   autoplayDelay={3000}\r\n\r\n   autoplayInterval={2000}\r\n\r\n   contentContainerCustomStyle={{\r\n\r\n       height: 220,\r\n\r\n       marginLeft: 4\r\n\r\n      \r\n   }}\r\n\r\n/>\r\n\r\n\r\n\r\n              </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst Container = styled.View`\r\n  \r\n  width: ${screenWidth};\r\n\r\n  height: 220px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}