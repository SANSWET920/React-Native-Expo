{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\screens\\\\EpisodeScreen.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n \\nmargin-top: 20px;\\n\\nmargin-left: 5px;\\n\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n \\nmargin-top: 20px;\\n\\nmargin-left:10px;\\n\\ncolor: black;\\n\\nfont-size: 15px;\\n\\nfont-weight: 600;\\n\\ntext-transform: uppercase;\\n\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n  margin-top: 20px;\\n\\n  margin-left:10px;\\n\\n  color: black;\\n\\n  font-size: 15px;\\n\\n  font-weight: 600;\\n\\n  text-transform: uppercase;\\n \\n \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n   width: 100%;\\n\\n   height: 100%;\\n   \\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n   width: 100%;\\n\\n   height: 229px;\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n   flex: 1;\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MedCard from \"../components/MedCard\";\nimport Carousel from \"react-native-snap-carousel\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar EpisodeScreen = function (_React$Component) {\n  _inherits(EpisodeScreen, _React$Component);\n\n  var _super = _createSuper(EpisodeScreen);\n\n  function EpisodeScreen() {\n    _classCallCheck(this, EpisodeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EpisodeScreen, [{\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(View, {\n        style: {\n          borderRadius: 10,\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: {\n          width: \"100%\",\n          height: 220\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigation = this.props.navigation;\n      var data = navigation.getParam(\"episode\");\n      var MedCardData = navigation.getParam(\"datas\");\n      var MovieCardData = navigation.getParam(\"movieData\");\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(CoverImage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, React.createElement(EpisodeImage, {\n        source: {\n          uri: data.episodeImage\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: \"Black\",\n          fontSize: 20,\n          marginTop: 10,\n          marginLeft: 10,\n          marginBottom: 10,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, data.title), React.createElement(ContinueText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }\n      }, \"Continue Watching\"), React.createElement(MedCardContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 3\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }\n      }, MedCardData.map(function (data, index) {\n        return React.createElement(TouchableOpacity, {\n          key: index,\n          onPress: function onPress() {\n            _this.props.navigation.push(\"Video\", {\n              video: data,\n              datas: MedCardData,\n              movieData: MovieCardData\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 5\n          }\n        }, React.createElement(MedCard, {\n          image: data.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 2\n          }\n        }));\n      }))), React.createElement(LikeText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 3\n        }\n      }, \"Recently Uploaded\"), React.createElement(Carousel, {\n        ref: function ref(c) {\n          return _this.carousel = c;\n        },\n        data: MedCardData,\n        renderItem: this._renderItem,\n        sliderWidth: screenWidth,\n        itemWidth: 340,\n        inactiveSlideScale: 0.95,\n        inactiveSlideOpacity: 1,\n        enableMomentum: true,\n        activeSlideAlignment: \"start\",\n        loop: true,\n        autoplay: true,\n        autoplayDelay: 3000,\n        autoplayInterval: 2000,\n        contentContainerCustomStyle: {\n          height: 220,\n          marginLeft: 15,\n          marginTop: 10\n        },\n        layout: \"stack\",\n        layoutCardOffset: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 3\n        }\n      })));\n    }\n  }]);\n\n  return EpisodeScreen;\n}(React.Component);\n\nEpisodeScreen.navigationOptions = {\n  header: null\n};\nexport default EpisodeScreen;\nvar Container = styled.View(_templateObject());\nvar CoverImage = styled.View(_templateObject2());\nvar EpisodeImage = styled.Image(_templateObject3());\nvar ContinueText = styled.Text(_templateObject4());\nvar LikeText = styled.Text(_templateObject5());\nvar MedCardContainer = styled.View(_templateObject6());","map":{"version":3,"sources":["D:/React Native Project/Memes/screens/EpisodeScreen.js"],"names":["React","styled","MedCard","Carousel","screenWidth","Dimensions","get","width","EpisodeScreen","item","index","borderRadius","overflow","uri","image","height","navigation","props","data","getParam","MedCardData","MovieCardData","episodeImage","color","fontSize","marginTop","marginLeft","marginBottom","fontWeight","title","map","push","video","datas","movieData","c","carousel","_renderItem","Component","navigationOptions","header","Container","View","CoverImage","EpisodeImage","Image","ContinueText","Text","LikeText","MedCardContainer"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Text,ScrollView,TouchableOpacity,Dimensions,View,Image} from \"react-native\";\r\n\r\nimport MedCard from '../components/MedCard';\r\n\r\nimport Carousel from \"react-native-snap-carousel\";\r\n\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n\r\n\r\nclass EpisodeScreen extends React.Component {\r\n\r\n    static navigationOptions = {\r\n\r\n        header: null\r\n\r\n    };\r\n\r\n    _renderItem({ item, index }) {\r\n\r\n      return (\r\n  \r\n         <View style={{ borderRadius: 10, overflow: \"hidden\" }}>\r\n  \r\n           <Image \r\n  \r\n              source={{\r\n  \r\n              uri: item.image\r\n  \r\n           }}\r\n  \r\n           style={{\r\n  \r\n              width: \"100%\",\r\n  \r\n              height: 220 \r\n  \r\n           }}\r\n  \r\n     \r\n        />\r\n  \r\n         </View>\r\n  \r\n      );\r\n  \r\n    }\r\n\r\n      render(){\r\n\r\n        const { navigation } = this.props;\r\n\r\n        const data = navigation.getParam(\"episode\");\r\n\r\n        const MedCardData = navigation.getParam(\"datas\");\r\n\r\n        const MovieCardData = navigation.getParam(\"movieData\");\r\n\r\n         return (\r\n\r\n            <Container>\r\n\r\n            <ScrollView>\r\n\r\n              <CoverImage>\r\n\r\n                 <EpisodeImage source={{ uri: data.episodeImage }} /> \r\n\r\n              </CoverImage>\r\n\r\n              <Text style={{ \r\n                 \r\n                 color: \"Black\", \r\n\r\n                 fontSize: 20,\r\n\r\n                 marginTop: 10,\r\n\r\n                 marginLeft: 10,\r\n\r\n                 marginBottom: 10,\r\n\r\n                 fontWeight: \"bold\"\r\n\r\n                  }}\r\n\r\n               >\r\n\r\n                  {data.title}\r\n\r\n               </Text>\r\n\r\n               <ContinueText>Continue Watching</ContinueText>\r\n\r\n  <MedCardContainer> \r\n\r\n    <ScrollView  \r\n\r\n     horizontal={true}  \r\n\r\n     showsHorizontalScrollIndicator={false}\r\n\r\n    >\r\n       \r\n {MedCardData.map((data,index) => (\r\n\r\n    <TouchableOpacity\r\n\r\n      key={index}\r\n\r\n      onPress={() => {\r\n\r\n      this.props.navigation.push(\"Video\", {\r\n\r\n       video: data,\r\n\r\n       datas: MedCardData,\r\n\r\n       movieData: MovieCardData\r\n\r\n});\r\n\r\n}} \r\n\r\n>\r\n\r\n <MedCard image={data.image} />\r\n\r\n   </TouchableOpacity>\r\n\r\n))}\r\n\r\n </ScrollView>\r\n\r\n     </MedCardContainer>\r\n\r\n  <LikeText>Recently Uploaded</LikeText>\r\n\r\n  <Carousel \r\n\r\nref={c => this.carousel = c}\r\n\r\ndata={MedCardData}\r\n\r\nrenderItem={this._renderItem}\r\n\r\nsliderWidth={screenWidth}\r\n\r\nitemWidth={340}\r\n\r\ninactiveSlideScale={0.95}\r\n\r\ninactiveSlideOpacity={1}\r\n\r\nenableMomentum={true}\r\n\r\nactiveSlideAlignment={\"start\"}\r\n\r\nloop={true}\r\n\r\nautoplay={true}\r\n\r\nautoplayDelay={3000}\r\n\r\nautoplayInterval={2000}\r\n\r\ncontentContainerCustomStyle={{\r\n\r\n    height: 220,\r\n\r\n    marginLeft: 15,\r\n\r\n    marginTop: 10\r\n\r\n}}\r\n\r\n  layout={\"stack\"}\r\n\r\n  layoutCardOffset={9}\r\n\r\n/>\r\n\r\n              </ScrollView>\r\n\r\n            </Container>\r\n\r\n         )\r\n\r\n      } \r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default EpisodeScreen;\r\n\r\n\r\n\r\n\r\nconst Container = styled.View`\r\n\r\n   flex: 1;\r\n\r\n`;\r\n\r\nconst CoverImage = styled.View`\r\n\r\n   width: 100%;\r\n\r\n   height: 229px;\r\n\r\n`;\r\n\r\nconst EpisodeImage= styled.Image`\r\n\r\n   width: 100%;\r\n\r\n   height: 100%;\r\n   \r\n`;\r\n\r\n\r\n\r\nconst ContinueText = styled.Text`\r\n\r\n  margin-top: 20px;\r\n\r\n  margin-left:10px;\r\n\r\n  color: black;\r\n\r\n  font-size: 15px;\r\n\r\n  font-weight: 600;\r\n\r\n  text-transform: uppercase;\r\n \r\n `;\r\n\r\n\r\n\r\nconst LikeText = styled.Text`\r\n \r\nmargin-top: 20px;\r\n\r\nmargin-left:10px;\r\n\r\ncolor: black;\r\n\r\nfont-size: 15px;\r\n\r\nfont-weight: 600;\r\n\r\ntext-transform: uppercase;\r\n\r\n`;\r\n\r\n\r\nconst MedCardContainer = styled.View`\r\n \r\nmargin-top: 20px;\r\n\r\nmargin-left: 5px;\r\n\r\n`;\r\n\r\n"]},"metadata":{},"sourceType":"module"}