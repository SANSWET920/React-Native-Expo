{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\GiftedAvatar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nvar carrot = Color.carrot,\n    emerald = Color.emerald,\n    peterRiver = Color.peterRiver,\n    wisteria = Color.wisteria,\n    alizarin = Color.alizarin,\n    turquoise = Color.turquoise,\n    midnightBlue = Color.midnightBlue;\n\nvar GiftedAvatar = function (_React$PureComponent) {\n  _inherits(GiftedAvatar, _React$PureComponent);\n\n  var _super = _createSuper(GiftedAvatar);\n\n  function GiftedAvatar() {\n    _classCallCheck(this, GiftedAvatar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GiftedAvatar, [{\n    key: \"setAvatarColor\",\n    value: function setAvatarColor() {\n      var userName = this.props.user.name || '';\n      var name = userName.toUpperCase().split(' ');\n\n      if (name.length === 1) {\n        this.avatarName = \"\" + name[0].charAt(0);\n      } else if (name.length > 1) {\n        this.avatarName = \"\" + name[0].charAt(0) + name[1].charAt(0);\n      } else {\n        this.avatarName = '';\n      }\n\n      var sumChars = 0;\n\n      for (var i = 0; i < userName.length; i += 1) {\n        sumChars += userName.charCodeAt(i);\n      }\n\n      var colors = [carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue];\n      this.avatarColor = colors[sumChars % colors.length];\n    }\n  }, {\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      if (typeof this.props.user.avatar === 'function') {\n        return this.props.user.avatar();\n      } else if (typeof this.props.user.avatar === 'string') {\n        return React.createElement(Image, {\n          source: {\n            uri: this.props.user.avatar\n          },\n          style: [styles.avatarStyle, this.props.avatarStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        });\n      } else if (typeof this.props.user.avatar === 'number') {\n        return React.createElement(Image, {\n          source: this.props.user.avatar,\n          style: [styles.avatarStyle, this.props.avatarStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderInitials\",\n    value: function renderInitials() {\n      return React.createElement(Text, {\n        style: [styles.textStyle, this.props.textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }\n      }, this.avatarName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (!this.props.user.name && !this.props.user.avatar) {\n        return React.createElement(View, {\n          style: [styles.avatarStyle, styles.avatarTransparent, this.props.avatarStyle],\n          accessibilityTraits: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        });\n      }\n\n      if (this.props.user.avatar) {\n        return React.createElement(TouchableOpacity, {\n          disabled: !this.props.onPress,\n          onPress: function onPress() {\n            var _this$props = _this.props,\n                onPress = _this$props.onPress,\n                other = _objectWithoutProperties(_this$props, [\"onPress\"]);\n\n            if (_this.props.onPress) {\n              _this.props.onPress(other);\n            }\n          },\n          accessibilityTraits: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, this.renderAvatar());\n      }\n\n      this.setAvatarColor();\n      return React.createElement(TouchableOpacity, {\n        disabled: !this.props.onPress,\n        onPress: function onPress() {\n          var _this$props2 = _this.props,\n              onPress = _this$props2.onPress,\n              other = _objectWithoutProperties(_this$props2, [\"onPress\"]);\n\n          if (_this.props.onPress) {\n            _this.props.onPress(other);\n          }\n        },\n        style: [styles.avatarStyle, {\n          backgroundColor: this.avatarColor\n        }, this.props.avatarStyle],\n        accessibilityTraits: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, this.renderInitials());\n    }\n  }]);\n\n  return GiftedAvatar;\n}(React.PureComponent);\n\nexport { GiftedAvatar as default };\nvar styles = {\n  avatarStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  avatarTransparent: {\n    backgroundColor: Color.backgroundTransparent\n  },\n  textStyle: {\n    color: Color.white,\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    fontWeight: '100'\n  }\n};\nGiftedAvatar.defaultProps = {\n  user: {\n    name: null,\n    avatar: null\n  },\n  onPress: null,\n  avatarStyle: {},\n  textStyle: {}\n};\nGiftedAvatar.propTypes = {\n  user: PropTypes.object,\n  onPress: PropTypes.func,\n  avatarStyle: Image.propTypes.style,\n  textStyle: Text.propTypes.style\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/GiftedAvatar.js"],"names":["PropTypes","React","Color","carrot","emerald","peterRiver","wisteria","alizarin","turquoise","midnightBlue","GiftedAvatar","userName","props","user","name","toUpperCase","split","length","avatarName","charAt","sumChars","i","charCodeAt","colors","avatarColor","avatar","uri","styles","avatarStyle","textStyle","avatarTransparent","onPress","other","renderAvatar","setAvatarColor","backgroundColor","renderInitials","PureComponent","justifyContent","alignItems","width","height","borderRadius","backgroundTransparent","color","white","fontSize","fontWeight","defaultProps","propTypes","object","func","Image","style","Text"],"mappings":"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","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }], padded-blocks: 0 */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Image, Text, TouchableOpacity, View } from 'react-native';\nimport Color from './Color';\n\nconst { carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue } = Color;\n// TODO\n// 3 words name initials\n// handle only alpha numeric chars\n\nexport default class GiftedAvatar extends React.PureComponent {\n  setAvatarColor() {\n    const userName = this.props.user.name || '';\n    const name = userName.toUpperCase().split(' ');\n    if (name.length === 1) {\n      this.avatarName = `${name[0].charAt(0)}`;\n    } else if (name.length > 1) {\n      this.avatarName = `${name[0].charAt(0)}${name[1].charAt(0)}`;\n    } else {\n      this.avatarName = '';\n    }\n\n    let sumChars = 0;\n    for (let i = 0; i < userName.length; i += 1) {\n      sumChars += userName.charCodeAt(i);\n    }\n\n    // inspired by https://github.com/wbinnssmith/react-user-avatar\n    // colors from https://flatuicolors.com/\n    const colors = [carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue];\n\n    this.avatarColor = colors[sumChars % colors.length];\n  }\n\n  renderAvatar() {\n    if (typeof this.props.user.avatar === 'function') {\n      return this.props.user.avatar();\n    } else if (typeof this.props.user.avatar === 'string') {\n      return (\n        <Image\n          source={{ uri: this.props.user.avatar }}\n          style={[styles.avatarStyle, this.props.avatarStyle]}\n        />\n      );\n    } else if (typeof this.props.user.avatar === 'number') {\n      return (\n        <Image\n          source={this.props.user.avatar}\n          style={[styles.avatarStyle, this.props.avatarStyle]}\n        />\n      );\n    }\n    return null;\n  }\n\n  renderInitials() {\n    return <Text style={[styles.textStyle, this.props.textStyle]}>{this.avatarName}</Text>;\n  }\n\n  render() {\n    if (!this.props.user.name && !this.props.user.avatar) {\n      // render placeholder\n      return (\n        <View\n          style={[styles.avatarStyle, styles.avatarTransparent, this.props.avatarStyle]}\n          accessibilityTraits=\"image\"\n        />\n      );\n    }\n    if (this.props.user.avatar) {\n      return (\n        <TouchableOpacity\n          disabled={!this.props.onPress}\n          onPress={() => {\n            const { onPress, ...other } = this.props;\n            if (this.props.onPress) {\n              this.props.onPress(other);\n            }\n          }}\n          accessibilityTraits=\"image\"\n        >\n          {this.renderAvatar()}\n        </TouchableOpacity>\n      );\n    }\n\n    this.setAvatarColor();\n\n    return (\n      <TouchableOpacity\n        disabled={!this.props.onPress}\n        onPress={() => {\n          const { onPress, ...other } = this.props;\n          if (this.props.onPress) {\n            this.props.onPress(other);\n          }\n        }}\n        style={[styles.avatarStyle, { backgroundColor: this.avatarColor }, this.props.avatarStyle]}\n        accessibilityTraits=\"image\"\n      >\n        {this.renderInitials()}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = {\n  avatarStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n  },\n  avatarTransparent: {\n    backgroundColor: Color.backgroundTransparent,\n  },\n  textStyle: {\n    color: Color.white,\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    fontWeight: '100',\n  },\n};\n\nGiftedAvatar.defaultProps = {\n  user: {\n    name: null,\n    avatar: null,\n  },\n  onPress: null,\n  avatarStyle: {},\n  textStyle: {},\n};\n\nGiftedAvatar.propTypes = {\n  user: PropTypes.object,\n  onPress: PropTypes.func,\n  avatarStyle: Image.propTypes.style,\n  textStyle: Text.propTypes.style,\n};\n"]},"metadata":{},"sourceType":"module"}