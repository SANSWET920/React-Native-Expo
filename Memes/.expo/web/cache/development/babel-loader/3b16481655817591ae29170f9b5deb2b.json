{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\Send.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Color from \"./Color\";\nexport default function Send(_ref) {\n  var text = _ref.text,\n      containerStyle = _ref.containerStyle,\n      onSend = _ref.onSend,\n      children = _ref.children,\n      textStyle = _ref.textStyle,\n      label = _ref.label,\n      alwaysShowSend = _ref.alwaysShowSend;\n\n  if (alwaysShowSend || text.trim().length > 0) {\n    return React.createElement(TouchableOpacity, {\n      testID: \"send\",\n      accessible: true,\n      accessibilityLabel: \"send\",\n      style: [styles.container, containerStyle],\n      onPress: function onPress() {\n        onSend({\n          text: text.trim()\n        }, true);\n      },\n      accessibilityTraits: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, children || React.createElement(Text, {\n      style: [styles.text, textStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 28\n      }\n    }, label)));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: 44,\n    justifyContent: 'flex-end'\n  },\n  text: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n    backgroundColor: Color.backgroundTransparent,\n    marginBottom: 12,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});\nSend.defaultProps = {\n  text: '',\n  onSend: function onSend() {},\n  label: 'Send',\n  containerStyle: {},\n  textStyle: {},\n  children: null,\n  alwaysShowSend: false\n};\nSend.propTypes = {\n  text: PropTypes.string,\n  onSend: PropTypes.func,\n  label: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.element,\n  alwaysShowSend: PropTypes.bool\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/Send.js"],"names":["PropTypes","React","Color","Send","text","containerStyle","onSend","children","textStyle","label","alwaysShowSend","trim","length","styles","container","StyleSheet","create","height","justifyContent","color","defaultBlue","fontWeight","fontSize","backgroundColor","backgroundTransparent","marginBottom","marginLeft","marginRight","defaultProps","propTypes","string","func","ViewPropTypes","style","Text","element","bool"],"mappings":";AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,KAAP;AAEA,eAAe,SAASC,IAAT,OAA4F;AAAA,MAA5EC,IAA4E,QAA5EA,IAA4E;AAAA,MAAtEC,cAAsE,QAAtEA,cAAsE;AAAA,MAAtDC,MAAsD,QAAtDA,MAAsD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AACzG,MAAIA,cAAc,IAAIN,IAAI,CAACO,IAAL,GAAYC,MAAZ,GAAqB,CAA3C,EAA8C;AAC5C,WACE,oBAAC,gBAAD;AACE,MAAA,MAAM,EAAC,MADT;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,kBAAkB,EAAC,MAHrB;AAIE,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBT,cAAnB,CAJT;AAKE,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,MAAM,CAAC;AAAEF,UAAAA,IAAI,EAAEA,IAAI,CAACO,IAAL;AAAR,SAAD,EAAwB,IAAxB,CAAN;AACD,OAPH;AAQE,MAAA,mBAAmB,EAAC,QARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,QAAQ,IAAI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACM,MAAM,CAACT,IAAR,EAAcI,SAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCC,KAAxC,CAAnB,CAVF,CADF;AAcD;;AACD,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;AAED,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,WADT;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,eAAe,EAAErB,KAAK,CAACsB,qBAJnB;AAKJC,IAAAA,YAAY,EAAE,EALV;AAMJC,IAAAA,UAAU,EAAE,EANR;AAOJC,IAAAA,WAAW,EAAE;AAPT;AALyB,CAAlB,CAAf;AAgBAxB,IAAI,CAACyB,YAAL,GAAoB;AAClBxB,EAAAA,IAAI,EAAE,EADY;AAElBE,EAAAA,MAAM,EAAE,kBAAM,CAAE,CAFE;AAGlBG,EAAAA,KAAK,EAAE,MAHW;AAIlBJ,EAAAA,cAAc,EAAE,EAJE;AAKlBG,EAAAA,SAAS,EAAE,EALO;AAMlBD,EAAAA,QAAQ,EAAE,IANQ;AAOlBG,EAAAA,cAAc,EAAE;AAPE,CAApB;AAUAP,IAAI,CAAC0B,SAAL,GAAiB;AACfzB,EAAAA,IAAI,EAAEJ,SAAS,CAAC8B,MADD;AAEfxB,EAAAA,MAAM,EAAEN,SAAS,CAAC+B,IAFH;AAGftB,EAAAA,KAAK,EAAET,SAAS,CAAC8B,MAHF;AAIfzB,EAAAA,cAAc,EAAE2B,aAAa,CAACC,KAJf;AAKfzB,EAAAA,SAAS,EAAE0B,IAAI,CAACL,SAAL,CAAeI,KALX;AAMf1B,EAAAA,QAAQ,EAAEP,SAAS,CAACmC,OANL;AAOfzB,EAAAA,cAAc,EAAEV,SAAS,CAACoC;AAPX,CAAjB","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }] */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, ViewPropTypes } from 'react-native';\nimport Color from './Color';\n\nexport default function Send({ text, containerStyle, onSend, children, textStyle, label, alwaysShowSend }) {\n  if (alwaysShowSend || text.trim().length > 0) {\n    return (\n      <TouchableOpacity\n        testID=\"send\"\n        accessible\n        accessibilityLabel=\"send\"\n        style={[styles.container, containerStyle]}\n        onPress={() => {\n          onSend({ text: text.trim() }, true);\n        }}\n        accessibilityTraits=\"button\"\n      >\n        <View>{children || <Text style={[styles.text, textStyle]}>{label}</Text>}</View>\n      </TouchableOpacity>\n    );\n  }\n  return <View />;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 44,\n    justifyContent: 'flex-end',\n  },\n  text: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n    backgroundColor: Color.backgroundTransparent,\n    marginBottom: 12,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n});\n\nSend.defaultProps = {\n  text: '',\n  onSend: () => {},\n  label: 'Send',\n  containerStyle: {},\n  textStyle: {},\n  children: null,\n  alwaysShowSend: false,\n};\n\nSend.propTypes = {\n  text: PropTypes.string,\n  onSend: PropTypes.func,\n  label: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.element,\n  alwaysShowSend: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}