{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\Day.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport moment from 'moment';\nimport Color from \"./Color\";\nimport { isSameDay } from \"./utils\";\nimport { DATE_FORMAT } from \"./Constant\";\nexport default function Day(_ref, context) {\n  var dateFormat = _ref.dateFormat,\n      currentMessage = _ref.currentMessage,\n      previousMessage = _ref.previousMessage,\n      nextMessage = _ref.nextMessage,\n      containerStyle = _ref.containerStyle,\n      wrapperStyle = _ref.wrapperStyle,\n      textStyle = _ref.textStyle,\n      inverted = _ref.inverted;\n\n  if (!isSameDay(currentMessage, inverted ? previousMessage : nextMessage)) {\n    return React.createElement(View, {\n      style: [styles.container, containerStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.text, textStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, moment(currentMessage.createdAt).locale(context.getLocale()).format(dateFormat).toUpperCase())));\n  }\n\n  return null;\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.defaultColor,\n    fontSize: 12,\n    fontWeight: '600'\n  }\n});\nDay.contextTypes = {\n  getLocale: PropTypes.func\n};\nDay.defaultProps = {\n  currentMessage: {\n    createdAt: null\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  dateFormat: DATE_FORMAT\n};\nDay.propTypes = {\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  inverted: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  dateFormat: PropTypes.string\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/Day.js"],"names":["PropTypes","React","moment","Color","isSameDay","DATE_FORMAT","Day","context","dateFormat","currentMessage","previousMessage","nextMessage","containerStyle","wrapperStyle","textStyle","inverted","styles","container","text","createdAt","locale","getLocale","format","toUpperCase","StyleSheet","create","alignItems","justifyContent","marginTop","marginBottom","backgroundColor","backgroundTransparent","color","defaultColor","fontSize","fontWeight","contextTypes","func","defaultProps","propTypes","object","bool","ViewPropTypes","style","Text","string"],"mappings":"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","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }] */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, View, ViewPropTypes } from 'react-native';\nimport moment from 'moment';\n\nimport Color from './Color';\n\nimport { isSameDay } from './utils';\nimport { DATE_FORMAT } from './Constant';\n\nexport default function Day(\n  { dateFormat, currentMessage, previousMessage, nextMessage, containerStyle, wrapperStyle, textStyle, inverted },\n  context,\n) {\n  if (!isSameDay(currentMessage, inverted ? previousMessage : nextMessage)) {\n    return (\n      <View style={[styles.container, containerStyle]}>\n        <View style={wrapperStyle}>\n          <Text style={[styles.text, textStyle]}>\n            {moment(currentMessage.createdAt)\n              .locale(context.getLocale())\n              .format(dateFormat)\n              .toUpperCase()}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10,\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.defaultColor,\n    fontSize: 12,\n    fontWeight: '600',\n  },\n});\n\nDay.contextTypes = {\n  getLocale: PropTypes.func,\n};\n\nDay.defaultProps = {\n  currentMessage: {\n    // TODO: test if crash when createdAt === null\n    createdAt: null,\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  dateFormat: DATE_FORMAT,\n};\n\nDay.propTypes = {\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  inverted: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  dateFormat: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}