{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\Avatar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport GiftedAvatar from \"./GiftedAvatar\";\nimport { isSameUser, isSameDay } from \"./utils\";\nvar styles = {\n  left: StyleSheet.create({\n    container: {\n      marginRight: 8\n    },\n    onTop: {\n      alignSelf: 'flex-start'\n    },\n    onBottom: {},\n    image: {\n      height: 36,\n      width: 36,\n      borderRadius: 18\n    }\n  }),\n  right: StyleSheet.create({\n    container: {\n      marginLeft: 8\n    },\n    onTop: {\n      alignSelf: 'flex-start'\n    },\n    onBottom: {},\n    image: {\n      height: 36,\n      width: 36,\n      borderRadius: 18\n    }\n  })\n};\n\nvar Avatar = function (_React$PureComponent) {\n  _inherits(Avatar, _React$PureComponent);\n\n  var _super = _createSuper(Avatar);\n\n  function Avatar() {\n    _classCallCheck(this, Avatar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Avatar, [{\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      var _this = this;\n\n      if (this.props.renderAvatar) {\n        var _this$props = this.props,\n            renderAvatar = _this$props.renderAvatar,\n            avatarProps = _objectWithoutProperties(_this$props, [\"renderAvatar\"]);\n\n        return this.props.renderAvatar(avatarProps);\n      }\n\n      return React.createElement(GiftedAvatar, {\n        avatarStyle: StyleSheet.flatten([styles[this.props.position].image, this.props.imageStyle[this.props.position]]),\n        user: this.props.currentMessage.user,\n        onPress: function onPress() {\n          return _this.props.onPressAvatar && _this.props.onPressAvatar(_this.props.currentMessage.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          renderAvatarOnTop = _this$props2.renderAvatarOnTop,\n          showAvatarForEveryMessage = _this$props2.showAvatarForEveryMessage;\n      var messageToCompare = renderAvatarOnTop ? this.props.previousMessage : this.props.nextMessage;\n      var computedStyle = renderAvatarOnTop ? 'onTop' : 'onBottom';\n\n      if (this.props.renderAvatar === null) {\n        return null;\n      }\n\n      if (!showAvatarForEveryMessage && isSameUser(this.props.currentMessage, messageToCompare) && isSameDay(this.props.currentMessage, messageToCompare)) {\n        return React.createElement(View, {\n          style: [styles[this.props.position].container, this.props.containerStyle[this.props.position]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }, React.createElement(GiftedAvatar, {\n          avatarStyle: StyleSheet.flatten([styles[this.props.position].image, this.props.imageStyle[this.props.position]]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: [styles[this.props.position].container, styles[this.props.position][computedStyle], this.props.containerStyle[this.props.position]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, this.renderAvatar());\n    }\n  }]);\n\n  return Avatar;\n}(React.PureComponent);\n\nexport { Avatar as default };\nAvatar.defaultProps = {\n  renderAvatarOnTop: false,\n  showAvatarForEveryMessage: false,\n  position: 'left',\n  currentMessage: {\n    user: null\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  imageStyle: {},\n  onPressAvatar: function onPressAvatar() {}\n};\nAvatar.propTypes = {\n  renderAvatarOnTop: PropTypes.bool,\n  showAvatarForEveryMessage: PropTypes.bool,\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  onPressAvatar: PropTypes.func,\n  renderAvatar: PropTypes.func,\n  containerStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style\n  }),\n  imageStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style\n  })\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/Avatar.js"],"names":["PropTypes","React","GiftedAvatar","isSameUser","isSameDay","styles","left","StyleSheet","create","container","marginRight","onTop","alignSelf","onBottom","image","height","width","borderRadius","right","marginLeft","Avatar","props","renderAvatar","avatarProps","flatten","position","imageStyle","currentMessage","user","onPressAvatar","renderAvatarOnTop","showAvatarForEveryMessage","messageToCompare","previousMessage","nextMessage","computedStyle","containerStyle","PureComponent","defaultProps","propTypes","bool","oneOf","object","func","shape","ViewPropTypes","style"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, View, ViewPropTypes } from 'react-native';\nimport GiftedAvatar from './GiftedAvatar';\nimport { isSameUser, isSameDay } from './utils';\n\nconst styles = {\n  left: StyleSheet.create({\n    container: {\n      marginRight: 8,\n    },\n    onTop: {\n      alignSelf: 'flex-start',\n    },\n    onBottom: {},\n    image: {\n      height: 36,\n      width: 36,\n      borderRadius: 18,\n    },\n  }),\n  right: StyleSheet.create({\n    container: {\n      marginLeft: 8,\n    },\n    onTop: {\n      alignSelf: 'flex-start',\n    },\n    onBottom: {},\n    image: {\n      height: 36,\n      width: 36,\n      borderRadius: 18,\n    },\n  }),\n};\n\nexport default class Avatar extends React.PureComponent {\n\n  renderAvatar() {\n    if (this.props.renderAvatar) {\n      const { renderAvatar, ...avatarProps } = this.props;\n      return this.props.renderAvatar(avatarProps);\n    }\n    return (\n      <GiftedAvatar\n        avatarStyle={StyleSheet.flatten([\n          styles[this.props.position].image,\n          this.props.imageStyle[this.props.position],\n        ])}\n        user={this.props.currentMessage.user}\n        onPress={() => this.props.onPressAvatar && this.props.onPressAvatar(this.props.currentMessage.user)}\n      />\n    );\n  }\n\n  render() {\n    const { renderAvatarOnTop, showAvatarForEveryMessage } = this.props;\n    const messageToCompare = renderAvatarOnTop ? this.props.previousMessage : this.props.nextMessage;\n    const computedStyle = renderAvatarOnTop ? 'onTop' : 'onBottom';\n\n    if (this.props.renderAvatar === null) {\n      return null;\n    }\n\n    if (\n      !showAvatarForEveryMessage &&\n      isSameUser(this.props.currentMessage, messageToCompare) &&\n      isSameDay(this.props.currentMessage, messageToCompare)\n    ) {\n      return (\n        <View style={[styles[this.props.position].container, this.props.containerStyle[this.props.position]]}>\n          <GiftedAvatar\n            avatarStyle={StyleSheet.flatten([\n              styles[this.props.position].image,\n              this.props.imageStyle[this.props.position],\n            ])}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <View\n        style={[\n          styles[this.props.position].container,\n          styles[this.props.position][computedStyle],\n          this.props.containerStyle[this.props.position],\n        ]}\n      >\n        {this.renderAvatar()}\n      </View>\n    );\n  }\n\n}\n\nAvatar.defaultProps = {\n  renderAvatarOnTop: false,\n  showAvatarForEveryMessage: false,\n  position: 'left',\n  currentMessage: {\n    user: null,\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  imageStyle: {},\n  onPressAvatar: () => {},\n};\n\nAvatar.propTypes = {\n  renderAvatarOnTop: PropTypes.bool,\n  showAvatarForEveryMessage: PropTypes.bool,\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  onPressAvatar: PropTypes.func,\n  renderAvatar: PropTypes.func,\n  containerStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style,\n  }),\n  imageStyle: PropTypes.shape({\n    left: ViewPropTypes.style,\n    right: ViewPropTypes.style,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}