{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\components\\\\Success.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n  width: 100%;\\n\\n  height: 100%;\\n\\n  background: rgba(255,255,255, 0.9);  \\n\\n  position: absolute;\\n\\n  top: 0;\\n\\n  left: 0;\\n\\n  justify-content: center;\\n\\n  align-items: center;\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport LottieView from \"lottie-react-native\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar screenHeight = Dimensions.get(\"window\").height;\n\nvar Success = function (_React$Component) {\n  _inherits(Success, _React$Component);\n\n  var _super = _createSuper(Success);\n\n  function Success() {\n    var _this;\n\n    _classCallCheck(this, Success);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      top: new Animated.Value(0),\n      opacity: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Success, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.isActive) {\n        Animated.timing(this.state.top, {\n          toValue: 0,\n          duration: 0\n        }).start();\n        Animated.timing(this.state.opacity, {\n          toValue: 1\n        }).start();\n        this.animation.play();\n      } else {\n        Animated.timing(this.state.top, {\n          toValue: screenHeight,\n          duration: 0\n        }).start();\n        Animated.timing(this.state.opacity, {\n          toValue: 0\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(AnimatedContainer, {\n        style: {\n          top: this.state.top,\n          opacity: this.state.opacity\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }\n      }, React.createElement(LottieView, {\n        source: require(\"../assets/8376-upload-success.json\"),\n        autoPlay: false,\n        loop: false,\n        ref: function ref(animation) {\n          _this2.animation = animation;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return Success;\n}(React.Component);\n\nexport default Success;\nvar Container = styled.View(_templateObject());\nvar AnimatedContainer = Animated.createAnimatedComponent(Container);","map":{"version":3,"sources":["D:/React Native Project/Memes/components/Success.js"],"names":["React","styled","LottieView","screenHeight","Dimensions","get","height","Success","state","top","Animated","Value","opacity","props","isActive","timing","toValue","duration","start","animation","play","require","Component","Container","View","AnimatedContainer","createAnimatedComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAMA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C;;IAKMC,O;;;;;;;;;;;;;;;UAEHC,K,GAAQ;AAEJC,MAAAA,GAAG,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAFD;AAIJC,MAAAA,OAAO,EAAE,IAAIF,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AAJL,K;;;;;;wCAQY,CAAE;;;yCAGA;AAEjB,UAAG,KAAKE,KAAL,CAAWC,QAAd,EAAyB;AAEtBJ,QAAAA,QAAQ,CAACK,MAAT,CAAgB,KAAKP,KAAL,CAAWC,GAA3B,EAAgC;AAAEO,UAAAA,OAAO,EAAE,CAAX;AAAcC,UAAAA,QAAQ,EAAE;AAAxB,SAAhC,EAA6DC,KAA7D;AAEAR,QAAAA,QAAQ,CAACK,MAAT,CAAgB,KAAKP,KAAL,CAAWI,OAA3B,EAAoC;AAAEI,UAAAA,OAAO,EAAE;AAAX,SAApC,EAAoDE,KAApD;AAEA,aAAKC,SAAL,CAAeC,IAAf;AAGF,OATD,MASO;AAEHV,QAAAA,QAAQ,CAACK,MAAT,CAAgB,KAAKP,KAAL,CAAWC,GAA3B,EAAgC;AAE5BO,UAAAA,OAAO,EAAEb,YAFmB;AAI5Bc,UAAAA,QAAQ,EAAE;AAJkB,SAAhC,EAMGC,KANH;AAQAR,QAAAA,QAAQ,CAACK,MAAT,CAAgB,KAAKP,KAAL,CAAWI,OAA3B,EAAoC;AAAEI,UAAAA,OAAO,EAAE;AAAX,SAApC,EAEGE,KAFH;AAIH;AAEJ;;;6BAEO;AAAA;;AAEN,aAEG,oBAAC,iBAAD;AAEC,QAAA,KAAK,EAAE;AAAET,UAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAlB;AAAuBG,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI;AAA3C,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,UAAD;AAEA,QAAA,MAAM,EAAES,OAAO,sCAFf;AAIA,QAAA,QAAQ,EAAE,KAJV;AAMA,QAAA,IAAI,EAAE,KANN;AAQA,QAAA,GAAG,EAAE,aAAAF,SAAS,EAAI;AAEd,UAAA,MAAI,CAACA,SAAL,GAAiBA,SAAjB;AAEH,SAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFH;AA4BF;;;;EAxEkBnB,KAAK,CAACsB,S;;AA6E5B,eAAef,OAAf;AAIA,IAAMgB,SAAS,GAAGtB,MAAM,CAACuB,IAAV,mBAAf;AAqBA,IAAMC,iBAAiB,GAAGf,QAAQ,CAACgB,uBAAT,CAAiCH,SAAjC,CAA1B","sourcesContent":["import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport LottieView from \"lottie-react-native\";\r\n\r\nimport { Animated,Dimensions} from \"react-native\";\r\n\r\n\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height;\r\n\r\n\r\n\r\n\r\nclass Success extends React.Component {\r\n\r\n   state = {\r\n\r\n       top: new Animated.Value(0),\r\n\r\n       opacity: new Animated.Value(0)\r\n\r\n   };\r\n\r\n   componentDidMount() {}\r\n   \r\n\r\n    componentDidUpdate() {\r\n \r\n        if(this.props.isActive ) {\r\n\r\n           Animated.timing(this.state.top, { toValue: 0, duration: 0 }).start(); \r\n\r\n           Animated.timing(this.state.opacity, { toValue: 1 }).start();\r\n\r\n           this.animation.play();\r\n\r\n\r\n        } else {\r\n\r\n            Animated.timing(this.state.top, {\r\n                \r\n                toValue: screenHeight,\r\n                \r\n                duration: 0 \r\n            \r\n            }).start(); \r\n\r\n            Animated.timing(this.state.opacity, { toValue: 0 \r\n            \r\n            }).start();\r\n\r\n        }  \r\n\r\n    }\r\n\r\n   render() {\r\n\r\n      return (\r\n\r\n         <AnimatedContainer \r\n         \r\n          style={{ top: this.state.top, opacity: this.state.opacity }}\r\n         \r\n          >\r\n\r\n           <LottieView \r\n           \r\n           source={require(\"../assets/8376-upload-success.json\")}\r\n           \r\n           autoPlay={false}\r\n\r\n           loop={false}\r\n\r\n           ref={animation => {\r\n\r\n               this.animation = animation;\r\n\r\n           }}\r\n           \r\n         />\r\n\r\n         </AnimatedContainer>\r\n\r\n      );\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\nexport default Success;\r\n\r\n\r\n\r\nconst Container = styled.View`\r\n\r\n  width: 100%;\r\n\r\n  height: 100%;\r\n\r\n  background: rgba(255,255,255, 0.9);  \r\n\r\n  position: absolute;\r\n\r\n  top: 0;\r\n\r\n  left: 0;\r\n\r\n  justify-content: center;\r\n\r\n  align-items: center;\r\n\r\n`;\r\n\r\n\r\nconst AnimatedContainer = Animated.createAnimatedComponent(Container);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}