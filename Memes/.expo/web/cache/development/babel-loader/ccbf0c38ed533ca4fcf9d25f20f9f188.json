{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\screens\\\\ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { GiftedChat } from \"react-native-gifted-chat-new\";\nimport Fire from \"../screens/Fire\";\n\nvar ChatScreen = function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen() {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Fire.get(function (message) {\n        return _this2.setState(function (previous) {\n          return {\n            messages: GiftedChat.append(previous.messages, message)\n          };\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Fire.off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var chat = React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: Fire.send,\n        user: this.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }\n      });\n\n      if (Platform.OS === \"android\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1\n          },\n          behavior: \"padding\",\n          keyboardVerticalOffset: 30,\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        }, chat);\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }\n      }, chat);\n    }\n  }, {\n    key: \"user\",\n    get: function get() {\n      return {\n        _id: Fire.uid,\n        name: this.props.navigation.state.params.name\n      };\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nexport { ChatScreen as default };\n;","map":{"version":3,"sources":["D:/React Native Project/Memes/screens/ChatScreen.js"],"names":["React","Component","GiftedChat","Fire","ChatScreen","state","messages","get","message","setState","previous","append","off","chat","send","user","Platform","OS","flex","_id","uid","name","props","navigation","params"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,SAAQC,UAAR,QAAyB,8BAAzB;AAEA,OAAOC,IAAP;;IAGqBC,U;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AAEJC,MAAAA,QAAQ,EAAG;AAFP,K;;;;;;wCAkBY;AAAA;;AAElBH,MAAAA,IAAI,CAACI,GAAL,CAAS,UAAAC,OAAO;AAAA,eAEd,MAAI,CAACC,QAAL,CAAc,UAAAC,QAAQ;AAAA,iBAAK;AAEvBJ,YAAAA,QAAQ,EAAEJ,UAAU,CAACS,MAAX,CAAkBD,QAAQ,CAACJ,QAA3B,EAAqCE,OAArC;AAFa,WAAL;AAAA,SAAtB,CAFc;AAAA,OAAhB;AAUH;;;2CAEwB;AAEnBL,MAAAA,IAAI,CAACS,GAAL;AAEH;;;6BAEQ;AAEL,UAAMC,IAAI,GAAG,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QAAjC;AAA2C,QAAA,MAAM,EAAEH,IAAI,CAACW,IAAxD;AAA8D,QAAA,IAAI,EAAE,KAAKC,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AAEJ,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAEzB,eAEG,oBAAC,oBAAD;AAAsB,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA7B;AAA0C,UAAA,QAAQ,EAAC,SAAnD;AAA6D,UAAA,sBAAsB,EAAE,EAArF;AAAyF,UAAA,OAAO,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEKL,IAFL,CAFH;AAUL;;AAEG,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCL,IAAnC,CAAP;AACH;;;wBAnDU;AAEP,aAAO;AAEFM,QAAAA,GAAG,EAAEhB,IAAI,CAACiB,GAFR;AAIFC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBlB,KAAtB,CAA4BmB,MAA5B,CAAmCH;AAJvC,OAAP;AAQH;;;;EAlBmCrB,KAAK,CAACC,S;;SAAzBG,U;AA6DpB","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Platform, KeyboardAvoidingView, SafeAreaView } from 'react-native';\r\n\r\nimport {GiftedChat} from \"react-native-gifted-chat-new\";\r\n\r\nimport Fire from \"../screens/Fire\";\r\n\r\n\r\nexport default class ChatScreen extends React.Component {\r\n\r\n    state = {\r\n\r\n        messages:  []\r\n\r\n    };\r\n\r\n    get user() {\r\n\r\n        return {\r\n\r\n             _id: Fire.uid,\r\n\r\n             name: this.props.navigation.state.params.name\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      Fire.get(message => \r\n        \r\n        this.setState(previous => ({\r\n\r\n            messages: GiftedChat.append(previous.messages, message )\r\n\r\n        }))\r\n        \r\n     );\r\n\r\n  }\r\n\r\n    componentWillUnmount() {\r\n\r\n        Fire.off();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const chat = <GiftedChat messages={this.state.messages} onSend={Fire.send} user={this.user} />;\r\n\r\n    if (Platform.OS === \"android\") {\r\n\r\n          return (\r\n\r\n             <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\" keyboardVerticalOffset={30} enabled>\r\n\r\n                 {chat}\r\n\r\n             </KeyboardAvoidingView>\r\n\r\n          );\r\n\r\n    }\r\n\r\n        return <SafeAreaView style={{ flex: 1 }}>{chat}</SafeAreaView>;\r\n    }\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}