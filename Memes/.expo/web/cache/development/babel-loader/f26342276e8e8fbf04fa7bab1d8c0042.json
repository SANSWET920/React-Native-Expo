{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\React Native Project\\\\Memes\\\\node_modules\\\\react-native-gifted-chat-new\\\\src\\\\LoadEarlier.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Color from \"./Color\";\n\nvar LoadEarlier = function (_React$Component) {\n  _inherits(LoadEarlier, _React$Component);\n\n  var _super = _createSuper(LoadEarlier);\n\n  function LoadEarlier() {\n    _classCallCheck(this, LoadEarlier);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadEarlier, [{\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.props.isLoadingEarlier === false) {\n        return React.createElement(Text, {\n          style: [styles.text, this.props.textStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        }, this.props.label);\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, this.props.textStyle, {\n          opacity: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, this.props.label), React.createElement(ActivityIndicator, {\n        color: \"white\",\n        size: \"small\",\n        style: [styles.activityIndicator, this.props.activityIndicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: function onPress() {\n          if (_this.props.onLoadEarlier) {\n            _this.props.onLoadEarlier();\n          }\n        },\n        disabled: this.props.isLoadingEarlier === true,\n        accessibilityTraits: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, this.renderLoading()));\n    }\n  }]);\n\n  return LoadEarlier;\n}(React.Component);\n\nexport { LoadEarlier as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16\n    })\n  }\n});\nLoadEarlier.defaultProps = {\n  onLoadEarlier: function onLoadEarlier() {},\n  isLoadingEarlier: false,\n  label: 'Load earlier messages',\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  activityIndicatorStyle: {}\n};\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  activityIndicatorStyle: ViewPropTypes.style\n};","map":{"version":3,"sources":["D:/React Native Project/Memes/node_modules/react-native-gifted-chat-new/src/LoadEarlier.js"],"names":["PropTypes","React","Color","LoadEarlier","props","isLoadingEarlier","styles","text","textStyle","label","opacity","activityIndicator","activityIndicatorStyle","container","containerStyle","onLoadEarlier","wrapper","wrapperStyle","renderLoading","Component","StyleSheet","create","alignItems","marginTop","marginBottom","justifyContent","backgroundColor","defaultColor","borderRadius","height","paddingLeft","paddingRight","backgroundTransparent","color","white","fontSize","Platform","select","ios","android","defaultProps","propTypes","func","bool","string","ViewPropTypes","style","Text"],"mappings":"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","sourcesContent":["/* eslint no-use-before-define: [\"error\", { \"variables\": false }], react-native/no-inline-styles: 0 */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ActivityIndicator,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  ViewPropTypes,\n} from 'react-native';\nimport Color from './Color';\n\nexport default class LoadEarlier extends React.Component {\n\n  renderLoading() {\n    if (this.props.isLoadingEarlier === false) {\n      return (\n        <Text style={[styles.text, this.props.textStyle]}>\n          {this.props.label}\n        </Text>\n      );\n    }\n    return (\n      <View>\n        <Text style={[styles.text, this.props.textStyle, { opacity: 0 }]}>\n          {this.props.label}\n        </Text>\n        <ActivityIndicator\n          color=\"white\"\n          size=\"small\"\n          style={[styles.activityIndicator, this.props.activityIndicatorStyle]}\n        />\n      </View>\n    );\n  }\n  render() {\n    return (\n      <TouchableOpacity\n        style={[styles.container, this.props.containerStyle]}\n        onPress={() => {\n          if (this.props.onLoadEarlier) {\n            this.props.onLoadEarlier();\n          }\n        }}\n        disabled={this.props.isLoadingEarlier === true}\n        accessibilityTraits=\"button\"\n      >\n        <View style={[styles.wrapper, this.props.wrapperStyle]}>\n          {this.renderLoading()}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10,\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12,\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16,\n    }),\n  },\n});\n\nLoadEarlier.defaultProps = {\n  onLoadEarlier: () => { },\n  isLoadingEarlier: false,\n  label: 'Load earlier messages',\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  activityIndicatorStyle: {},\n};\n\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  activityIndicatorStyle: ViewPropTypes.style,\n};\n"]},"metadata":{},"sourceType":"module"}